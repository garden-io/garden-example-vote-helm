image:
  registry: docker.io
  repository: bitnami/redis
  tag: 4.0.13
  pullPolicy: Always
cluster:
  enabled: true
  slaveCount: 1
networkPolicy:
  enabled: false
serviceAccount:
  create: false
  name: null
rbac:
  create: false
  role:
    rules: []
usePassword: false
password: null
usePasswordFile: false
persistence: {}
master:
  port: 6379
  command: /run.sh
  extraFlags: []
  disableCommands:
    - FLUSHDB
    - FLUSHALL
  podLabels: {}
  podAnnotations: {}
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  affinity: {}
  service:
    type: ClusterIP
    port: 6379
    annotations: {}
    loadBalancerIP: null
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  persistence:
    enabled: true
    path: /data
    subPath: ''
    accessModes:
      - ReadWriteOnce
    size: 8Gi
  statefulset:
    updateStrategy: RollingUpdate
slave:
  service:
    type: ClusterIP
    annotations: {}
    loadBalancerIP: null
  affinity: {}
metrics:
  enabled: false
  image:
    registry: docker.io
    repository: oliver006/redis_exporter
    tag: v0.28.0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/port: '9121'
  serviceMonitor:
    enabled: false
    selector:
      prometheus: kube-prometheus
volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: latest
    pullPolicy: IfNotPresent
  resources: {}
configmap: '# maxmemory-policy volatile-lru'
sysctlImage:
  enabled: false
  command: []
  registry: docker.io
  repository: bitnami/minideb
  tag: latest
  pullPolicy: Always
  mountHostSys: false
  resources: {}
